[{"H:\\React-Projects\\ldc-shutdown\\src\\index.js":"1","H:\\React-Projects\\ldc-shutdown\\src\\App.js":"2","H:\\React-Projects\\ldc-shutdown\\src\\reportWebVitals.js":"3","H:\\React-Projects\\ldc-shutdown\\src\\Components\\login.js":"4","H:\\React-Projects\\ldc-shutdown\\src\\Components\\signin.js":"5","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Api\\api.js":"6","H:\\React-Projects\\ldc-shutdown\\src\\Components\\NavBar\\Navbar.js":"7","H:\\React-Projects\\ldc-shutdown\\src\\Components\\shutdown.js":"8","H:\\React-Projects\\ldc-shutdown\\src\\Components\\masterdata.js":"9","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Masterdata.js":"10","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Shutdown.js":"11","H:\\React-Projects\\ldc-shutdown\\src\\history.js":"12","H:\\React-Projects\\ldc-shutdown\\src\\Home.js":"13","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Logout.js":"14","H:\\React-Projects\\ldc-shutdown\\src\\services\\auth-header.js":"15","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Controls.js":"16","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Input.js":"17","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Button.js":"18","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Masterdata.js":"19","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\MasterDataForm.js":"20","H:\\React-Projects\\ldc-shutdown\\src\\Components\\UseForm.js":"21","H:\\React-Projects\\ldc-shutdown\\src\\Components\\UseTable.js":"22","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Popup.js":"23","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\ActionButton.js":"24","H:\\React-Projects\\ldc-shutdown\\src\\Components\\AppContext.js":"25","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Loadshedding.js":"26","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\LoadSheddingForm.js":"27","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Select.js":"28","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\DatePicker.js":"29","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\MasterDataArchive.js":"30","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\LoadSheddingArchive.js":"31","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\TrafoShutdown.js":"32","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\TrafoShutdownForm.js":"33","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Notifications.js":"34","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\ConfirmDialogue.js":"35","H:\\React-Projects\\ldc-shutdown\\src\\signing.js":"36","H:\\React-Projects\\ldc-shutdown\\src\\Components\\NavBar\\Header.js":"37","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Footer.js":"38"},{"size":497,"mtime":1614858013999,"results":"39","hashOfConfig":"40"},{"size":649,"mtime":1614869964440,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1612447268939,"results":"42","hashOfConfig":"40"},{"size":5537,"mtime":1614883088034,"results":"43","hashOfConfig":"40"},{"size":1684,"mtime":1608730846175,"results":"44","hashOfConfig":"40"},{"size":11397,"mtime":1612510430449,"results":"45","hashOfConfig":"40"},{"size":2017,"mtime":1612709719455,"results":"46","hashOfConfig":"40"},{"size":180,"mtime":1609748078292,"results":"47","hashOfConfig":"40"},{"size":208,"mtime":1609748071187,"results":"48","hashOfConfig":"40"},{"size":5706,"mtime":1611585229985,"results":"49","hashOfConfig":"40"},{"size":234,"mtime":1610962476249,"results":"50","hashOfConfig":"40"},{"size":86,"mtime":1612447268778,"results":"51","hashOfConfig":"40"},{"size":1825,"mtime":1614882948292,"results":"52","hashOfConfig":"40"},{"size":519,"mtime":1612447269070,"results":"53","hashOfConfig":"40"},{"size":331,"mtime":1612447269710,"results":"54","hashOfConfig":"40"},{"size":306,"mtime":1612447269398,"results":"55","hashOfConfig":"40"},{"size":568,"mtime":1612447269450,"results":"56","hashOfConfig":"40"},{"size":835,"mtime":1612447269373,"results":"57","hashOfConfig":"40"},{"size":13872,"mtime":1614885032682,"results":"58","hashOfConfig":"40"},{"size":20321,"mtime":1612447269674,"results":"59","hashOfConfig":"40"},{"size":901,"mtime":1612447269229,"results":"60","hashOfConfig":"40"},{"size":4359,"mtime":1614882810329,"results":"61","hashOfConfig":"40"},{"size":1359,"mtime":1612447269141,"results":"62","hashOfConfig":"40"},{"size":809,"mtime":1612447269343,"results":"63","hashOfConfig":"40"},{"size":127,"mtime":1612447269010,"results":"64","hashOfConfig":"40"},{"size":9957,"mtime":1614883417958,"results":"65","hashOfConfig":"40"},{"size":15383,"mtime":1612718106049,"results":"66","hashOfConfig":"40"},{"size":1728,"mtime":1612447269474,"results":"67","hashOfConfig":"40"},{"size":766,"mtime":1612447269425,"results":"68","hashOfConfig":"40"},{"size":7828,"mtime":1612534142719,"results":"69","hashOfConfig":"40"},{"size":6645,"mtime":1612533829669,"results":"70","hashOfConfig":"40"},{"size":8095,"mtime":1612710047347,"results":"71","hashOfConfig":"40"},{"size":5628,"mtime":1612710154579,"results":"72","hashOfConfig":"40"},{"size":638,"mtime":1612718112067,"results":"73","hashOfConfig":"40"},{"size":2286,"mtime":1612721143692,"results":"74","hashOfConfig":"40"},{"size":1573,"mtime":1614858871835,"results":"75","hashOfConfig":"40"},{"size":2074,"mtime":1614881554939,"results":"76","hashOfConfig":"40"},{"size":561,"mtime":1614883334536,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"qoz2xt",{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\React-Projects\\ldc-shutdown\\src\\index.js",[],["170","171"],"H:\\React-Projects\\ldc-shutdown\\src\\App.js",["172","173"],"H:\\React-Projects\\ldc-shutdown\\src\\reportWebVitals.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\login.js",["174","175","176"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\signin.js",["177","178","179","180","181"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Api\\api.js",["182","183","184","185","186","187","188","189","190","191","192","193","194"],"import Authheader from \"../../services/auth-header\";\r\n\r\n\r\nconst url = \"http://localhost:52293/api\";\r\n\r\nexport const VerfiyLogin = async (getusername, getpassword) => {\r\n\r\n    console.log(\"function called\");\r\n    console.log(`user name ${getusername}`);\r\n    console.log(`password ${getpassword}`);\r\n\r\n    let getToken = await fetch(`${url}/Login/authenticate`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            username: getusername,\r\n            password: getpassword,\r\n        }),\r\n        headers: {\r\n            \r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n           \r\n        },\r\n        mode: 'cors',\r\n    });\r\n    console.log(getToken);\r\n\r\n    if (getToken.status === 200) {\r\n\r\n        let { token, expiryDate } = await getToken.json();\r\n        localStorage.setItem(\"Token\", token);\r\n        console.log(token);\r\n        console.log(expiryDate);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const AddMasterData =async(masterdata) => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    console.log(masterdata);\r\n   const data = [ {\"userid\" : 1} , {\"masterdata\" : masterdata}];\r\n  console.log(\r\n    JSON.stringify(data));\r\n\r\n    let addMData = await fetch(`${url}/MasterData/AddMasterData`, {\r\n        method: \"POST\",\r\n        body:JSON.stringify(data),\r\n        \r\n        \r\n        headers: {\r\n             'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n  ;\r\n}\r\n\r\n\r\nexport const InsertMasterData =async(masterdata) => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    console.log(masterdata);\r\n   const data = { \"userid\" : 1 , \"masterdata\" : [masterdata]};\r\n  console.log(\r\n    JSON.stringify(data));\r\n\r\n    let addMData = await fetch(`${url}/MasterData/InsertMasterData`, {\r\n            method: \"POST\",\r\n        body:JSON.stringify(data),\r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n  ;\r\n}\r\n\r\n\r\nexport const updateMasterData =async(masterdata) => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    console.log(masterdata);\r\n   const data = { \"userid\" : 1 ,\"MasterDataSNO\" : masterdata.MasterDataSNO ,\"masterdata\" : [masterdata]};\r\n  console.log(\r\n    JSON.stringify(data));\r\n\r\n    let addMData = await fetch(`${url}/MasterData/updateMasterData`, {\r\n        method: \"POST\",\r\n        body:JSON.stringify(data),\r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n  ;\r\n}\r\n\r\nexport const getAllMasterData =async() => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\n\r\n\r\n    let GetData = await fetch(`${url}/MasterData/getAllMasterData`, {\r\n        method: \"GET\",\r\n      \r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\nexport const getAllMasterDataArchive =async() => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\n\r\n\r\n    let GetData = await fetch(`${url}/MasterData/getAllMasterDataArchive`, {\r\n        method: \"GET\",\r\n      \r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\n//LoadShedding Calls Below\r\nexport const getAllLSData =async() => {\r\n\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\n\r\n\r\n    let GetData = await fetch(`${url}/LoadShediing/GetLoadSheddings`, {\r\n        method: \"GET\",\r\n      \r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\nexport const getAllBlocks =async() => {\r\n\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\n\r\n\r\n    let GetData = await fetch(`${url}/MasterData/getAllGridBlock`, {\r\n        method: \"GET\",\r\n      \r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\nexport const getGroups =async(block) => {\r\n\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\nconsole.log (`Block ${block}`)\r\n\r\n    let GetData = await fetch(`${url}/MasterData/getGroup`, {\r\n        method: \"POST\",\r\n       \r\n        body : JSON.stringify({\r\n            \"getGridBlock\" : block\r\n        }),\r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\n\r\n\r\nexport const getCategory =async(block,getGroup) => {\r\n\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\nconsole.log (`Block ${block} Group ${getGroup}`)\r\n\r\n    let GetData = await fetch(`${url}/MasterData/getCategory`, {\r\n        method: \"POST\",\r\n       \r\n        body : JSON.stringify({\r\n            \"getGridBlock\" : block,\r\n            \"getGroup\" : getGroup\r\n        }),\r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\nexport const InsertLSData =async(masterdata) => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    console.log(masterdata);\r\n   const data = { \"userid\" : 1 , \"ls\" : masterdata};\r\n  console.log(\r\n    JSON.stringify(data));\r\n\r\n    let addMData = await fetch(`${url}/LoadShediing/addLoadSheddding`, {\r\n        method: \"POST\",\r\n        body:JSON.stringify(data),\r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n  ;\r\n}\r\n\r\nexport const updateLSData =async(lsdata) => {\r\n    console.log(\"Getting Token\")\r\n  \r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    console.log(lsdata);\r\n   const data = { \"userid\" : 1 , \"ls\" : lsdata};\r\n  console.log(\r\n    JSON.stringify(data));\r\n\r\n    let addMData = await fetch(`${url}/LoadShediing/editLoadShedding`, {\r\n        method: \"POST\",\r\n        body:JSON.stringify(data),\r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n  ;\r\n}\r\n\r\nexport const GetLoadSheddings =async() => {\r\n    \r\n  \r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n \r\n\r\n    let addMData = await fetch(`${url}/LoadShediing/GetLoadSheddings`, {\r\n        method: \"GET\",\r\n        \r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\n\r\nexport const setExpiry =async(expiry) => {\r\n    \r\n  \r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n    const data = { \"userid\" : 1 , \"dateTime\" : expiry};\r\nconsole.log(JSON.stringify (data))\r\n    let addMData = await fetch(`${url}/LoadShediing/editExpiry`, {\r\n        method: \"POST\",\r\n        body :JSON.stringify (data),\r\n        \r\n        \r\n        headers: {\r\n             //'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await addMData.json();\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n\r\nexport const getAllLSDataArchive =async() => {\r\n    console.log(\"Getting Token\")\r\n    console.log(Authheader().token);\r\n    console.log(\"Getting Token from Local Storage\");\r\n    console.log(localStorage.getItem(\"Token\"));\r\n    let token =localStorage.getItem(\"Token\"); \r\n    \r\n  \r\n\r\n\r\n    let GetData = await fetch(`${url}/LoadShediing/GetLSDataArchieveforDisplay`, {\r\n        method: \"GET\",\r\n      \r\n        \r\n        \r\n        headers: {\r\n            // 'Authorization' :`Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n    })\r\n    let getData = await GetData.json();\r\n\r\n    console.log(getData);\r\n    return getData;\r\n  ;\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\NavBar\\Navbar.js",["195","196","197"],"import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from '../../Home';\r\nimport isAuthContext from  \"../AppContext\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  menuButton: {\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  logoutButton: {\r\n    marginLeft: theme.spacing(90),\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const isAppAuth = useContext(isAuthContext)\r\n    console.log(isAppAuth);\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            LDC Automation\r\n          </Typography>\r\n      <Button color=\"inherit\"  component={Link} to = \"/Pages/masterdata\" className={classes.menuButton}>Master Data</Button>\r\n         <Button color=\"inherit\"  component={Link} to = \"/Pages/Loadshedding\" className={classes.menuButton}>Shutdown</Button>\r\n         <Button color=\"inherit\" component={Link} to = \"/Pages/TrafoShutdown\" className={classes.menuButton}>Trafo Shutdown</Button>\r\n         <Button color=\"inherit\" component={Link} to = \"/Pages/MasterDataArchive\" className={classes.menuButton}>Master Data Archive</Button>\r\n         <Button color=\"inherit\" component={Link} to = \"/Pages/LoadSheddingArchive\" className={classes.menuButton}>Shutdown Archive</Button>\r\n      \r\n         <Button color=\"inherit\" component={Link} to = \"/\"  className={classes.logoutButton} onClick ={ ()=> {  localStorage.clear(\"Token\");isAppAuth[1](false)}\r\n      } >Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","H:\\React-Projects\\ldc-shutdown\\src\\Components\\shutdown.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\masterdata.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Masterdata.js",["198","199"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Shutdown.js",["200"],"import React from 'react'\r\n\r\n const Shutdown =() => {\r\nvar Token = localStorage.getItem(\"Token\");\r\n\r\n\r\n  return (\r\n  \r\n    <div>\r\n      <h3> Shutdown plan will be displayed here!</h3>\r\n    </div>\r\n  )\r\n \r\n}\r\n\r\nexport default Shutdown;",["201","202"],"H:\\React-Projects\\ldc-shutdown\\src\\history.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Home.js",["203","204"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Logout.js",["205","206"],"import React,{useEffect, useState} from 'react'\r\nimport history  from \"../history\";\r\n\r\nexport default function Logout() {\r\n\r\n    const {logout , setLogout} = useState();\r\n\r\n    useEffect =() => {\r\n        const logout =() => {\r\n            setLogout(true);\r\n        }\r\n    }\r\n   \r\n\r\n    if(logout)\r\n    {\r\n        localStorage.removeItem(\"Token\");\r\n        history.push(\"/\");\r\n    }\r\n    else\r\n    {\r\n    return (\r\n        \r\n        <div>\r\n            <h3>You are successfully Logout</h3>\r\n        </div>\r\n    )\r\n}\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\services\\auth-header.js",["207"],"import React from 'react'\r\n\r\nexport default function Authheader() {\r\n    const user = localStorage.getItem(\"Token\");\r\n  \r\n        if(user && user.accessToken != null)\r\n        {\r\n            return {Authorization : 'Bearer ' + user.accessToken};\r\n        }\r\n        else\r\n        {\r\n            return {};\r\n        }\r\n        \r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Controls.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Input.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Button.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Masterdata.js",["208","209","210","211","212","213"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\MasterDataForm.js",["214"],"import React, { useEffect } from 'react'\r\nimport { Controls } from '../../Components/Controls/Controls';\r\nimport UseForm, { Form } from \"../../Components/UseForm\";\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst initialFValues = {\r\n    MasterDataSNO : 0,\r\n    ISLAND: \"\",\r\n    grid: \"\",\r\n    GridBlock: \"\",\r\n    TRAFO: \"\",\r\n    FeederID: 0,\r\n    Switch_Number: 0,\r\n\r\n    Switch_Name: \"\",\r\n    Switch_Type: \"\",\r\n    FEEDER_TYPE: \"\",\r\n    Group: \"\",\r\n    Category: \"\", Switch_Make: \"\",\r\n    Region: \"\", Cable_Status: \"\", UFR_SW: \"\",\r\n    Stage_A: \"\", Stage_B: \"\",\r\n    S1: \"\", S2: \"\", S3: \"\", S4: \"\",S5: \"\", S6: \"\", S7: \"\", S8: \"\", S9: \"\", S10: \"\", S11: \"\", CAP_OK_MVAR: \"\", CAP_MVAR: \"\",\r\n}\r\nexport default function MasterDataForm(props) {\r\n    const {addOrEdit , recordForEdit} =props;\r\n    const { values, setValues,handleChange } = UseForm(initialFValues);\r\n    useEffect ( ()=> {\r\n\r\n        if(recordForEdit != null) {\r\n            setValues({...recordForEdit})\r\n        }\r\n    }, [recordForEdit])\r\n\r\n \r\n    \r\n\r\n    const handleSubmit = e => {\r\n       \r\n        e.preventDefault();\r\n        console.log(values);\r\n        addOrEdit(values);\r\n\r\n    }\r\n    return (\r\n        <Form onSubmit= {handleSubmit}>\r\n\r\n            <Grid>\r\n                <Grid container>\r\n                    <Grid item xs={6} >\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.ISLAND}\r\n                            name=\"ISLAND\"\r\n                            label=\"ISLAND\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter ISLAND Name\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            id=\"ISLAND\"\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"1\" }}\r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.GridBlock}\r\n                            name=\"GridBlock\"\r\n                            label=\"gridblock\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Grid Block\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            id=\"GridBlock\"\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"3\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.TRAFO}\r\n                            name=\"TRAFO\"\r\n                            label=\"Trafo\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Trafo Name\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"5\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Switch_Type}\r\n                            name=\"Switch_Type\"\r\n                            label=\"Switch Type\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Switch Type Here\"\r\n                            margin=\"normal\"\r\n                            required   \r\n                            inputprops={{ tabIndex: \"7\" }}\r\n\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.FEEDER_TYPE}\r\n                            name=\"FEEDER_TYPE\"\r\n                            label=\"Feeder Type\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Feeder Type Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"9\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Group}\r\n                            name=\"Group\"\r\n                            label=\"Group\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Group Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"11\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Cable_Status}\r\n                            name=\"Cable_Status\"\r\n                            label=\"Cable Status\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Cable Status Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            inputprops={{ tabIndex: \"13\" }}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Stage_A}\r\n                            name=\"Stage_A\"\r\n                            label=\"Stage A 49.4 df/dt\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Stage A 49.4 df/dt Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"15\" }}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S1}\r\n                            name=\"S1\"\r\n                            label=\"49.3(S1)\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 49.3(S1) Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"17\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S3}\r\n                            name=\"S3\"\r\n                            label=\"49.0 (S3) 150ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 49.0 (S3) 150ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"19\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S5}\r\n                            name=\"S5\"\r\n                            label=\"48.6(S5) 50 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.6(S5) 50 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"21\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S7}\r\n                            name=\"S7\"\r\n                            label=\"48.6(S7)300 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.6(S7) 300 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"23\" }}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S9}\r\n                            name=\"S9\"\r\n                            label=\"48.5(S9) 50 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.5(S9)50 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"25\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S11}\r\n                            name=\"S11\"\r\n                            label=\"48.4(S11)50 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.4(S11) 50 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"27\" }}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.CAP_MVAR}\r\n                            name=\"CAP_MVAR\"\r\n                            label=\"CAP (Faulty, drop) MVAR\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter CAP (Faulty, drop) MVAR Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"29\" }}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} >\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.FeederID}\r\n                            name=\"FeederID\"\r\n                            label=\"Feeder Id\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Feeder Id\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"2\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Switch_Number}\r\n                            name=\"Switch_Number\"\r\n                            label=\"Switch Number\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Switch Number\"\r\n                            margin=\"normal\"\r\n                            required  \r\n                            inputprops={{ tabIndex: \"4\" }}\r\n\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Switch_Make}\r\n                            name=\"Switch_Make\"\r\n                            label=\"Switch Make\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Switch Make Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            inputprops={{ tabIndex: \"6\" }}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Switch_Name}\r\n                            name=\"Switch_Name\"\r\n                            label=\"Switch Name\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Switch Name Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"8\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Category}\r\n                            name=\"Category\"\r\n                            label=\"Category\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Category Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"10\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Region}\r\n                            name=\"Region\"\r\n                            label=\"Region\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Region Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            inputprops={{ tabIndex: \"12\" }}\r\n\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.UFR_SW}\r\n                            name=\"UFR_SW\"\r\n                            label=\"UFR (SW)\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter UFR (SW) Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"14\" }}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.Stage_B}\r\n                            name=\"Stage_B\"\r\n                            label=\"Stage B 49.4 df/dt\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Stage B 49.4 df/dt Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"16\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S2}\r\n                            name=\"S2\"\r\n                            label=\"49.2(S2) 50 ms3\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 49.2(S2) 50 ms3 Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"18\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S4}\r\n                            name=\"S4\"\r\n                            label=\"48.8 (S4) 200ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.8 (S4) 200ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"20\" }}\r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S6}\r\n                            name=\"S6\"\r\n                            label=\"48.6(S6) 200 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.6(S6) 200 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"22\" }}\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S8}\r\n                            name=\"S8\"\r\n                            label=\"48.5(S8) 100 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.5(S8) 100 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"24\" }}\r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.S10}\r\n                            name=\"S10\"\r\n                            label=\"48.4(S10) 100 ms\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter 48.4(S10) 100 ms Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"26\" }}\r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.CAP_OK_MVAR}\r\n                            name=\"CAP_OK_MVAR\"\r\n                            label=\"CAP OK MVAR\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter CAP OK MVAR Here\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"28\" }}\r\n                        />\r\n                        <hr></hr>\r\n                        <div>\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"30\" }}\r\n                            >\r\n                                Submit\r\n\r\n              </Controls.Button>\r\n\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"31\" }}\r\n                            >\r\n                                Reset\r\n\r\n            </Controls.Button>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\UseForm.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\UseTable.js",["215"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Popup.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\ActionButton.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\AppContext.js",["216"],"import React, { createContext } from \"react\";\r\n\r\nconst isAuthContext = createContext(false)\r\n\r\nexport default  isAuthContext;\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Loadshedding.js",["217","218","219","220","221","222","223"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\LoadSheddingForm.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { useEffect, useState } from 'react'\r\nimport { Controls } from '../../Components/Controls/Controls';\r\nimport UseForm, { Form } from \"../../Components/UseForm\";\r\nimport { Grid } from '@material-ui/core'\r\nimport { getAllBlocks, getGroups, getCategory } from \"../Api/api\"\r\n\r\n\r\nconst initialFValues = {\r\n    LoadSheddingSNO: 0,\r\n    group: \"\",\r\n    block: \"\",\r\n    llFeders: 0,\r\n    mlFeeders: 0,\r\n    hlFeeders: 0,\r\n    vhlFeeders: 0,\r\n\r\n    totalFeeders: 0,\r\n    spell_1_to_and_From: \"\",\r\n    spell_2_to_and_From: \"\",\r\n    spell_3_to_and_From: \"\",\r\n    spell_4_to_and_From: \"\",\r\n    spell_5_to_and_From: \"\",\r\n    spell_6_to_and_From: \"\",\r\n\r\n\r\n}\r\nexport default function LoadSheddingForm(props) {\r\n    const { update, addOrEdit , recordForEdit } = props;\r\n    const { values, setValues, handleChange } = UseForm(initialFValues);\r\n    const [block, setBlock] = useState()\r\n    const [group, setgroup] = useState();\r\n    const [getBlock, setGetBlock] = useState()\r\n    const [getGroup, setgetGroup] = useState()\r\n    const [category, setCategory] = useState()\r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        console.log(values);\r\n         addOrEdit(values);\r\n\r\n    }\r\n\r\n    console.log(update);\r\n    console.log(\"LS Form Called\")\r\n\r\n    useEffect ( ()=> {\r\n\r\n        if(recordForEdit != null) {\r\n            setValues({...recordForEdit})\r\n        }\r\n    }, [recordForEdit])\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling fetchAPi from LSForm\")\r\n        const fetchAPI = async () => {\r\n            try {\r\n                console.log(values.block)\r\n                setBlock(await getAllBlocks());\r\n\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling get Group  UseEffect from LSForm\")\r\n        const setBlock = () => {\r\n            try {\r\n                console.log(values.block)\r\n\r\n                // if ( values.block == \"\") {\r\n                //     console.log(getBlock)\r\n                // }\r\n                // else {\r\n                setGetBlock(values.block)\r\n                //     console.log(getBlock)\r\n                // }\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        setBlock();\r\n    }, [handleChange]);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling getGroup from LSForm\")\r\n        const fetchAPI = async () => {\r\n            try {\r\n                console.log(values.block)\r\n                if (values.block == \"\") {\r\n                    console.log(\"value is none,\")\r\n                    setgroup(\"\");\r\n                }\r\n                else {\r\n                    setgroup(await getGroups(values.block))\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, [getBlock]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling Set Group  UseEffect from LSForm\")\r\n        const setGrp = () => {\r\n            try {\r\n                console.log(values.group)\r\n\r\n                // if ( values.block == \"\") {\r\n                //     console.log(getBlock)\r\n                // }\r\n                // else {\r\n                setgetGroup(values.group)\r\n                //     console.log(getBlock)\r\n                // }\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        setGrp();\r\n    }, [handleChange]);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling getCategory from LSForm\")\r\n        const fetchAPI = async () => {\r\n            try {\r\n                console.log(values.block, values.group)\r\n\r\n                setCategory(await getCategory(values.block, values.group))\r\n                console.log(category)\r\n                category.map(data => {\r\n\r\n                    if (data.categoryName == \"LL\") {\r\n                        console.log(\"LL Feeders matched \" + data.categoryCount)\r\n                        values.llFeders = data.categoryCount\r\n                    }\r\n\r\n                    if (data.categoryName == \"ML\") {\r\n                        console.log(\"ML Feeders matched \" + data.categoryCount)\r\n                        values.mlFeeders = data.categoryCount\r\n                    }\r\n                    if (data.categoryName == \"HL\") {\r\n                        console.log(\"HL Feeders matched \" + data.categoryCount)\r\n                        values.hlFeeders = data.categoryCount\r\n                    }\r\n\r\n                    if (data.categoryName == \"VHL\") {\r\n                        console.log(\"VL Feeders matched \" + data.categoryCount)\r\n                        values.vhlFeedersFeeders = data.categoryCount\r\n                    }\r\n\r\n                }\r\n\r\n                )\r\n                setValues({ ...values })\r\n                console.log(`setting values ${values}`)\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, [getGroup]);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"Calling sET Category from LSForm\")\r\n        const fetchAPI = async () => {\r\n            try {\r\n\r\n\r\n\r\n                console.log(category)\r\n                category.map(data => {\r\n\r\n                    if (data.categoryName == \"LL\") {\r\n                        console.log(\"LL Feeders matched \" + data.categoryCount)\r\n                        values.llFeeders = data.categoryCount\r\n                    }\r\n                    else {\r\n                        values.llFeeders = 0\r\n                    }\r\n\r\n                    if (data.categoryName == \"ML\") {\r\n                        console.log(\"ML Feeders matched \" + data.categoryCount)\r\n                        values.mlFeeders = data.categoryCount\r\n                    }\r\n                    else {\r\n                        values.mlFeeders = 0\r\n                    }\r\n                    if (data.categoryName == \"HL\") {\r\n                        console.log(\"HL Feeders matched \" + data.categoryCount)\r\n                        values.hlFeeders = data.categoryCount\r\n                    }\r\n                    else {\r\n                        values.hlFeeders = 0\r\n                    }\r\n\r\n                    if (data.categoryName == \"VHL\") {\r\n                        console.log(\"VL Feeders matched \" + data.categoryCount)\r\n                        values.vhlFeeders = data.categoryCount\r\n                    } else {\r\n                        values.vhlFeeders = 0\r\n                    }\r\n\r\n                }\r\n\r\n                )\r\n                setValues({ ...values })\r\n                console.log(`setting values ${values}`)\r\n\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, [category]);\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n\r\n            <Grid>\r\n                <Grid container>\r\n                    <Grid item xs={6} >\r\n\r\n\r\n                            <Controls.Select\r\n                                name=\"block\"\r\n                                label=\"Select Block\"\r\n                                value={values.block}\r\n                                onChange={handleChange}\r\n                                options={block}\r\n                            />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.llFeders}\r\n                            name=\"llFeders\"\r\n                            label=\"LL Feeders\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n\r\n\r\n                            id=\"llFeeders\"\r\n\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n                            disabled\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.hlFeeders}\r\n                            name=\"hlFeeders\"\r\n                            label=\"HL Feeders\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n\r\n\r\n                            id=\"hlFeeders\"\r\n\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n                            disabled\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_1_to_and_From}\r\n                            name=\"spell_1_to_and_From\"\r\n                            label=\"SPELL 1 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 1 TO AND FROM\"\r\n\r\n                            id=\"spell_1_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_3_to_and_From}\r\n                            name=\"spell_3_to_and_From\"\r\n                            label=\"SPELL 3 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 3 TO AND FROM\"\r\n\r\n                            id=\"spell_3_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_5_to_and_From}\r\n                            name=\"spell_5_to_and_From\"\r\n                            label=\"SPELL 5 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 5 TO AND FROM\"\r\n\r\n                            id=\"spell_5_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} >\r\n                        <Controls.Select\r\n                            name=\"group\"\r\n                            label=\"Select Group\"\r\n                            value={values.group}\r\n                            onChange={handleChange}\r\n                            options={group}\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.mlFeeders}\r\n                            name=\"mlFeeders\"\r\n                            label=\"ML Feeders\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n\r\n\r\n                            id=\"mlFeeders\"\r\n\r\n                            Inputprops={{ tabIndex: \"2\" }}\r\n                            disabled\r\n                        /> <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.vhlFeeders}\r\n                            name=\"vhlFeeders\"\r\n                            label=\"VHL Feeders\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n\r\n\r\n                            id=\"vhlFeeders\"\r\n\r\n                            Inputprops={{ tabIndex: \"2\" }}\r\n                            disabled\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_2_to_and_From}\r\n                            name=\"spell_2_to_and_From\"\r\n                            label=\"SPELL 2 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 2 TO AND FROM\"\r\n\r\n                            id=\"spell_2_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_4_to_and_From}\r\n                            name=\"spell_4_to_and_From\"\r\n                            label=\"SPELL 4 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 4 TO AND FROM\"\r\n\r\n                            id=\"spell_4_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.spell_6_to_and_From}\r\n                            name=\"spell_6_to_and_From\"\r\n                            label=\"SPELL 6 TO AND FROM\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"\"\r\n                            margin=\"normal\"\r\n                            placeholder=\"SPELL 6 TO AND FROM\"\r\n\r\n                            id=\"spell_6_to_and_From\"\r\n                            onChange={handleChange}\r\n                            Inputprops={{ tabIndex: \"1\" }}\r\n\r\n                        />\r\n                        <div>\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"30\" }}\r\n                            >\r\n                                Submit\r\n\r\n</Controls.Button>\r\n\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"31\" }}\r\n                            >\r\n                                Reset\r\n\r\n</Controls.Button>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Select.js",["248","249"],"import { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function Select(props) {\r\n    const {name,label,value,onChange, options} = props\r\n    const [data , setData] = useState();\r\n    console.log(options)\r\n    useEffect( ()=> {\r\n        if(options != undefined || options != null || options != \"\")\r\n        {\r\n            setData(options)\r\n        }\r\n    },[options])\r\n\r\n \r\n    if(data === undefined || data === null || data === \"\") {\r\n        \r\n        return (\r\n        <FormControl variant=\"outlined\">\r\n        <InputLabel>{label}</InputLabel> \r\n        <MuiSelect\r\n        label= {label}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        >\r\n            <MenuItem value =\"\">None</MenuItem>\r\n            \r\n        </MuiSelect>\r\n    </FormControl>\r\n        )\r\n    }\r\n    else{\r\n        console.log(data);\r\n        return (\r\n  \r\n            <FormControl variant=\"outlined\">\r\n                <InputLabel>{label}</InputLabel> \r\n                <MuiSelect\r\n                label= {label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                >\r\n                    <MenuItem value =\"\">None</MenuItem>\r\n                  \r\n                 {\r\n                    data.map(\r\n        \r\n                            (option) => (\r\n                                <MenuItem key={option.data} value ={option.data}>{option.data}</MenuItem>\r\n                            )\r\n                        )\r\n                    }\r\n                    \r\n                </MuiSelect>\r\n            </FormControl>\r\n        \r\n            )\r\n    }\r\n   \r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\DatePicker.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\MasterDataArchive.js",["250","251","252","253"],"import React, {useState, useEffect} from 'react'\r\nimport { Paper ,makeStyles, TableBody,TableRow, TableCell, Toolbar, InputAdornment} from '@material-ui/core';\r\nimport {getAllMasterDataArchive} from \"../Api/api\"\r\nimport UseTable from \"../UseTable\";\r\nimport { Snackbar  } from '@material-ui/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Controls } from \"../Controls/Controls\";\r\nconst useStyles =  makeStyles( theme => ({\r\n    pageContenet : {\r\n        \r\n        \r\n            margin: theme.spacing(3),\r\n            padding : theme.spacing(5), \r\n           width : '95%'\r\n        \r\n    },\r\n    inputControl : {\r\n        \r\n        \r\n        \r\n        //padding : theme.spacing(5), \r\n        margin: theme.spacing(3),\r\n        width : '20%'\r\n    \r\n},\r\naddNewbtn : {\r\n    position : 'absolute',\r\n    right : '10px'\r\n}\r\n    \r\n\r\n}))\r\n\r\nconst headCells = [\r\n    {id : 'MasterDataArchiveSNO', label : 'SNO' },\r\n    {id : 'MasterDataSNO', label : 'MasterData SNO' },\r\n    {id : 'ISLAND', label : 'ISLAND' },\r\n    {id : 'gridBlock', label : 'Grid Block' },\r\n    {id : 'trafo', label : 'TRAFO' },\r\n    {id : 'feederID', label : 'Feeder ID' },\r\n    {id : 'switch_Number', label : 'Switch #'},\r\n    {id : 'switch_Name', label : 'Switch Name' },\r\n    {id : 'switch_Type', label : 'Switch Type' },\r\n    {id : 'feedeR_TYPE', label : 'FEEDER TYPE' },\r\n    {id : 'group', label : 'Group' },\r\n    {id : 'category', label : 'Category' },\r\n    {id : 'switch_Make', label : 'Switch Make'},\r\n    {id : 'region', label : 'Region' },\r\n    {id : 'cable_Status', label : 'Cable Status Single/Double cable' },\r\n    {id : 'ufR_SW', label : 'UFR (Sw)'},\r\n    {id : 'stage_A', label : 'Stage A 49.4 df/dt'},\r\n    {id : 'stage_B', label : 'Stage B 49.4 df/dt'},\r\n    {id : 's1', label : '49.3(S1)' },\r\n    {id : 's2', label : '49.2(S2)50 ms3' },\r\n    {id : 's3', label : '49.0 (S3) 150ms' },\r\n    {id : 's4', label : '48.8 (S4) 200ms' },\r\n    {id : 's5', label : '48.6(S5)50 ms' },\r\n    {id : 's6', label : '48.6(S6)200 ms' },\r\n    {id : 's7', label : '48.6(S7)300 ms' },\r\n    {id : 's8', label : '48.5(S8)100 ms' },\r\n    {id : 's9', label : '48.5(S9)50 ms' },\r\n    {id : 's10', label : '48.4(S10)100 ms'},\r\n    {id : 's11', label : '48.4(S11)50 ms'},\r\n    {id: 'CAP_MVAR', label : 'CAP (Faulty, drop) MVAR' },\r\n    {id : 'CAP_OK_MVAR', label : 'CAP OK MVAR' },\r\n    {id : 'dataAddedName', label : 'Data Added By User' },\r\n    {id : 'dataAddedDateTime', label : 'Data Added DateTime' },\r\n    {id : 'ArchivedataAddedName', label : 'Data Archive By User' },\r\n    {id : 'ArchiveAddedDateTime', label : 'Archive Added DateTime' },\r\n]\r\n\r\n    export default function MasterDataArchive() {\r\n        const [getMasterData, setMasterData] = useState([]);\r\n        const [filterfn, setFilter] = useState( {fn : masterdataRecords => {return masterdataRecords}});\r\n        const [state, setState] = useState({\r\n            vertical : 'bottom',\r\n            horizontal: 'center',\r\n            isOpen : false,\r\n            \r\n        \r\n          });\r\n          const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n        \r\n            setState ({isOpen:false});\r\n          };\r\n        useEffect(() => {\r\n          \r\n            const fetchAPI = async () => {\r\n                try {\r\n                   \r\n              setMasterData(await getAllMasterDataArchive());\r\n             console.log(`masterData ${getMasterData}`)\r\n                } catch (error) {\r\n                    console.log(`Error ${error}`)\r\n                }\r\n               \r\n            }\r\n        \r\n        \r\n            fetchAPI(); \r\n        },[]);\r\n\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n    \r\n        const exportToCSV = (csvData, fileName) => {\r\n            const ws = XLSX.utils.json_to_sheet(csvData);\r\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n            const data = new Blob([excelBuffer], {type: fileType});\r\n            FileSaver.saveAs(data, fileName + fileExtension);\r\n        }\r\n        const {TblContainer,TblHead,TblPagination ,recordAfterPagingAndSorting} = UseTable(getMasterData,headCells,getMasterData.length,filterfn);\r\n        const classes = useStyles();\r\n        const isTokenisAlive = localStorage.getItem(\"Token\");\r\n        if(isTokenisAlive == null || isTokenisAlive == undefined)\r\n    {\r\n            console.log(\"Token is Expired\")\r\n            return (\r\n\r\n                <Snackbar open={state.isOpen} autoHideDuration={2500} onClose={handleClose} message=\"Session is Expired\" >\r\n               \r\n                </Snackbar>\r\n            )\r\n    }\r\n    else\r\n    {\r\n    return (\r\n        <Paper className = {classes.pageContenet}>\r\n        <Toolbar>\r\n          \r\n        <Controls.Button \r\n        variant = \"outlined\" startIcon = {<AddIcon></AddIcon> } className= {classes.addNewbtn}\r\n        onClick = { () => {exportToCSV(getMasterData,\"MasterDataArchive\") } }\r\n        >Export To Excel\r\n        </Controls.Button>\r\n\r\n       \r\n        </Toolbar>\r\n       \r\n            <TblContainer>\r\n            <TblHead></TblHead>\r\n                <TableBody>\r\n                {\r\n                    recordAfterPagingAndSorting().map( row => (\r\n                <TableRow key={row.MasterDataArchiveSNO}>\r\n                <TableCell >{row.MasterDataArchiveSNO}</TableCell>\r\n                <TableCell >{row.MasterDataSNO}</TableCell>\r\n                <TableCell >{row.ISLAND}</TableCell>\r\n                <TableCell >{row.GridBlock}</TableCell>\r\n                <TableCell >{row.TRAFO}</TableCell>\r\n                <TableCell >{row.FeederID}</TableCell>\r\n                <TableCell >{row.Switch_Number}</TableCell>\r\n                <TableCell >{row.Switch_Name}</TableCell>\r\n                <TableCell >{row.Switch_Type}</TableCell>\r\n                <TableCell >{row.FEEDER_TYPE}</TableCell>\r\n                <TableCell >{row.Switch_Make}</TableCell>\r\n                <TableCell >{row.Group}</TableCell>\r\n                <TableCell >{row.Category}</TableCell>\r\n                <TableCell >{row.Region}</TableCell>\r\n                <TableCell >{row.Cable_Status}</TableCell>\r\n                <TableCell >{row.UFR_SW}</TableCell>\r\n                <TableCell >{row.Stage_A}</TableCell>\r\n                <TableCell >{row.Stage_B}</TableCell>\r\n                <TableCell >{row.S1}</TableCell>\r\n                <TableCell >{row.S2}</TableCell>\r\n                <TableCell >{row.S3}</TableCell>\r\n                <TableCell >{row.S4}</TableCell>\r\n                <TableCell >{row.S5}</TableCell>\r\n                <TableCell >{row.S6}</TableCell>\r\n                <TableCell >{row.S7}</TableCell>\r\n                <TableCell >{row.S8}</TableCell>\r\n                <TableCell >{row.S9}</TableCell>\r\n                <TableCell >{row.S10}</TableCell>\r\n                <TableCell >{row.S11}</TableCell>\r\n                <TableCell >{row.CAP_OK_MVAR}</TableCell>\r\n                <TableCell >{row.CAP_MVAR}</TableCell>\r\n                <TableCell >{row.dataAddedName}</TableCell>\r\n                <TableCell >{new Date(row.dataAddedDateTime).toDateString()}</TableCell>\r\n                <TableCell >{row.ArchivedataAddedName}</TableCell>\r\n                <TableCell >{new Date(row.ArchiveAddedDateTime).toDateString()}</TableCell>\r\n               \r\n                        </TableRow>\r\n                    )\r\n\r\n                    )\r\n                }\r\n                </TableBody>\r\n            </TblContainer>\r\n            <TblPagination\r\n            ></TblPagination>\r\n        </Paper>\r\n    \r\n    )\r\n    }\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\LoadSheddingArchive.js",["254","255","256","257"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport { getAllLSDataArchive } from \"../Api/api\"\r\nimport UseTable from \"../UseTable\";\r\nimport { Snackbar } from '@material-ui/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Controls } from \"../Controls/Controls\";\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContenet: {\r\n\r\n\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(5),\r\n        width: '95%'\r\n\r\n    },\r\n    inputControl: {\r\n\r\n\r\n\r\n        //padding : theme.spacing(5), \r\n        margin: theme.spacing(3),\r\n        width: '20%'\r\n\r\n    },\r\n    addNewbtn: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n\r\n\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'ArchiveLoadSheddingSNO', label: 'SNO' },\r\n    { id: 'LoadSheddingSNO', label: 'Load Shedding SNO' },\r\n    { id: 'group', label: 'Group' },\r\n    { id: 'block', label: 'Block' },\r\n    { id: 'llFeders', label: 'LL Feeders' },\r\n    { id: 'mlFeeders', label: 'ML Feeders' },\r\n    { id: 'hlFeeders', label: 'HL Feeders' },\r\n    { id: 'vhlFeeders', label: 'VHL Feeders' },\r\n    { id: 'totalFeeders', label: 'Total Feeders' },\r\n    { id: 'spell_1_to_and_From', label: 'Spell 1 [To and From]' },\r\n    { id: 'spell_2_to_and_From', label: 'Spell 2 [To and From]' },\r\n    { id: 'spell_3_to_and_From', label: 'Spell 3 [To and From]' },\r\n    { id: 'spell_4_to_and_From', label: 'Spell 4 [To and From]' },\r\n    { id: 'spell_5_to_and_From', label: 'Spell 5 [To and From]' },\r\n    { id: 'spell_6_to_and_From', label: 'Spell 6 [To and From]' },\r\n    { id: 'planExpiry', label: 'Plan Expiry Date' },\r\n    { id: 'dataAddedDateTime', label: 'Plan Added Date Time' },\r\n    { id: 'dataAddedByName', label: 'Plan Added by User' },\r\n    { id: 'ArchiveAddedDateTime', label: 'Plan Archive Date Time' },\r\n    { id: 'ArchiveAddedByName', label: 'Plan Archive by User' },\r\n\r\n]\r\nexport default function LoadSheddingArchive() {\r\n    const [getLSData, setLSData] = useState([]);\r\n    const [filterfn, setFilter] = useState({ fn: masterdataRecords => { return masterdataRecords } });\r\n    const [state, setState] = useState({\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        isOpen: false,\r\n\r\n\r\n    });\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setState({ isOpen: false });\r\n    };\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async () => {\r\n            try {\r\n\r\n                setLSData(await getAllLSDataArchive());\r\n                console.log(getLSData)\r\n            } catch (error) {\r\n                console.log(`Error ${error}`)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n    const { TblContainer, TblHead, TblPagination, recordAfterPagingAndSorting } = UseTable(getLSData, headCells, getLSData.length, filterfn);\r\n    const classes = useStyles();\r\n    const isTokenisAlive = localStorage.getItem(\"Token\");\r\n    if (isTokenisAlive == null || isTokenisAlive == undefined) {\r\n        console.log(\"Token is Expired\")\r\n        return (\r\n\r\n            <Snackbar open={state.isOpen} autoHideDuration={2500} onClose={handleClose} message=\"Session is Expired\" >\r\n\r\n            </Snackbar>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Paper className={classes.pageContenet}>\r\n            <Toolbar>\r\n          \r\n            <Controls.Button \r\n            variant = \"outlined\" startIcon = {<AddIcon></AddIcon> } className= {classes.addNewbtn}\r\n            onClick = { () => {exportToCSV(getLSData,\"LoadSheddingArchive\") } }\r\n            >Export To Excel\r\n            </Controls.Button>\r\n  \r\n           \r\n            </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead></TblHead>\r\n                    <TableBody>\r\n                        {\r\n                            recordAfterPagingAndSorting().map(row => (\r\n                                <TableRow key={row.ArchiveLoadSheddingSNO}>\r\n                                <TableCell >{row.ArchiveLoadSheddingSNO}</TableCell>\r\n                                <TableCell >{row.LoadSheddingSNO}</TableCell>\r\n                                <TableCell >{row.group}</TableCell>\r\n                                <TableCell >{row.block}</TableCell>\r\n                                <TableCell >{row.llFeders}</TableCell>\r\n                                <TableCell >{row.mlFeeders}</TableCell>\r\n                                <TableCell >{row.hlFeeders}</TableCell>\r\n                                <TableCell >{row.vhlFeeders}</TableCell>\r\n                                <TableCell >{row.totalFeeders}</TableCell>\r\n                                <TableCell >{row.spell_1_to_and_From}</TableCell>\r\n                                <TableCell >{row.spell_2_to_and_From}</TableCell>\r\n                                <TableCell >{row.spell_3_to_and_From}</TableCell>\r\n                                <TableCell >{row.spell_4_to_and_From}</TableCell>\r\n                                <TableCell >{row.spell_5_to_and_From}</TableCell>\r\n                                <TableCell >{row.spell_6_to_and_From}</TableCell>\r\n                                <TableCell >{new Date(row.planExpiry).toDateString()}</TableCell>\r\n                                <TableCell >{new Date(row.dataAddedDateTime).toDateString()}</TableCell>\r\n                                <TableCell >{row.dataAddedByName}</TableCell>\r\n                                <TableCell >{new Date(row.ArchiveAddedDateTime).toDateString()}</TableCell>\r\n                                <TableCell >{row.ArchiveAddedByName}</TableCell>\r\n                           \r\n                                </TableRow>\r\n                            )\r\n\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination\r\n                ></TblPagination>\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\TrafoShutdown.js",["258","259","260","261","262","263","264","265","266"],"import React , {useState,useEffect}from 'react'\r\nimport { Paper ,makeStyles, TableBody,TableRow, TableCell, Toolbar, InputAdornment} from '@material-ui/core';\r\nimport UseTable from \"../UseTable\";\r\nimport { Controls } from \"../Controls/Controls\";\r\nimport { Search } from '@material-ui/icons';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Popup from \"../Popup\";\r\nimport { Snackbar  } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditOutlined from '@material-ui/icons/EditOutlined'\r\nimport TrafoShutdownForm from \"./TrafoShutdownForm\";\r\nconst useStyles =  makeStyles( theme => ({\r\n    pageContenet : {\r\n        \r\n        \r\n            margin: theme.spacing(3),\r\n            padding : theme.spacing(5), \r\n           width : '95%'\r\n        \r\n    },\r\n    inputControl : {\r\n        \r\n        \r\n        \r\n        //padding : theme.spacing(5), \r\n        margin: theme.spacing(3),\r\n        width : '20%'\r\n    \r\n},\r\naddNewbtn : {\r\n    position : 'absolute',\r\n    right : '10px'\r\n}\r\n    \r\n\r\n}))\r\n\r\nconst headCells = [\r\n    {id : 'TrafoShutdownSNO', label : 'SNO' },\r\n    {id : 'grid', label : 'Grid ' },\r\n    {id : 'trafo', label : 'Trafo' },\r\n    {id : 'time', label : 'Time' },\r\n    {id : 'date', label : 'Date' },\r\n    {id : 'feederAffected', label : 'Feeder Affected'},\r\n    {id : 'reason', label : 'Reason' },\r\n    {id : 'rating', label : 'Rating' },\r\n    {id : 'load', label : 'Load taken on Trafo' },\r\n    {id : 'gsm', label : 'GSM' },\r\n    {id : 'dataAddedDateTime', label : 'Data Added DateTime' },\r\n    {id : 'dataAddedBy', label : 'Data Added By' },\r\n    \r\n]\r\n\r\nexport default function TrafoShutdown() {\r\n\r\n    const [filterfn, setFilter] = useState( {fn : LSData => {return LSData}});\r\n    const [getLSData, setLSData] = useState([]);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [isUpdated ,setUpdated] = useState(\"\")\r\n    const [recordForEdit ,setRecordForEdit] = useState(null)\r\n    // useEffect(() => {\r\n    //     console.log(isUpdated)\r\n    //     const fetchAPI = async () => {\r\n    //         try {\r\n               \r\n    //             setLSData(await GetLoadSheddings());\r\n             \r\n    //         } catch (error) {\r\n    //             console.log(`Error ${error}`)\r\n    //         }\r\n           \r\n    //     }\r\n    \r\n    \r\n    //     fetchAPI(); \r\n    // },[isUpdated]);\r\n    const [state, setState] = useState({\r\n        vertical : 'bottom',\r\n        horizontal: 'center',\r\n        isOpen : false,\r\n        \r\n    \r\n      });\r\n      \r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setState ({isOpen:false});\r\n      };\r\n\r\n      const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        \r\n        \r\n      //  addExpiry(values);\r\n    }\r\n    \r\n\r\n      const addOredit = async (values,resetForm) => {\r\n        console.log(values.MasterDataSNO)\r\n        if(values.LoadSheddingSNO === 0)\r\n        {\r\n          //  await InsertLSData(values);\r\n           \r\n        }\r\n       \r\n        if(isUpdated === \"yes\")\r\n        {\r\n            setUpdated(\"yes!\")\r\n        }\r\n        else{\r\n            setUpdated(\"yes\")\r\n        }\r\n        \r\n        setRecordForEdit(null);\r\n        \r\n        \r\n        setOpenPopup(false);\r\n        \r\n    }\r\n\r\n\r\n  \r\n\r\n        \r\n    const hanleChange = (e) => {\r\n        const Tvalue = e.target;\r\n        console.log(e.target)\r\n        console.log(Tvalue.value == \"\")\r\n        console.log(Tvalue.value)\r\n    \r\n        setFilter ( {\r\n            fn: LSData => {\r\n                if(Tvalue.value == \"\")\r\n                {\r\n                    return LSData\r\n                }\r\n                else{\r\n                  \r\n                    return LSData.filter(x => x.block.includes(e.target.value) )\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n    const openInPopup =(item) => {\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n    }\r\n    const {TblContainer,TblHead,TblPagination ,recordAfterPagingAndSorting} = UseTable(getLSData,headCells,getLSData.length ,filterfn);\r\n    //console.log(getMasterData.length)        \r\n    const classes = useStyles();\r\n    const isTokenisAlive = localStorage.getItem(\"Token\");\r\n    if(isTokenisAlive == null || isTokenisAlive == undefined)\r\n    {\r\n            console.log(\"Token is Expired\")\r\n            return (\r\n\r\n                <Snackbar open={state.isOpen} autoHideDuration={2500} onClose={handleClose} message=\"Session is Expired\" >\r\n               \r\n                </Snackbar>\r\n            )\r\n    }\r\n    else\r\n    {\r\n    return (\r\n        <>\r\n        <Paper className = {classes.pageContenet}>\r\n       \r\n        <Toolbar>\r\n        <Controls.Input\r\n        className = {classes.inputControl}\r\n        label = \"Block\"\r\n        variant = \"outlined\"\r\n      \r\n                InputProps = { {\r\n                    startAdornment : (<InputAdornment position=\"start\">\r\n                    <Search></Search>\r\n                    </InputAdornment>)\r\n                        \r\n                \r\n                }}\r\n                onChange = {hanleChange}\r\n        >\r\n        </Controls.Input>\r\n        <Controls.Input\r\n        className = {classes.inputControl}\r\n        label = \"Group\"\r\n        variant = \"outlined\"\r\n        InputProps = { {\r\n            \r\n            startAdornment : (<InputAdornment position=\"start\">\r\n            <Search></Search>\r\n            </InputAdornment>)\r\n                \r\n        \r\n        }}>\r\n        </Controls.Input>\r\n        <Controls.Button \r\n        variant = \"outlined\" startIcon = {<AddIcon></AddIcon> } className= {classes.addNewbtn}\r\n        onClick = { () => {setOpenPopup(true) ;setRecordForEdit(null) } }\r\n        >Add ShutdownPlan\r\n        </Controls.Button>\r\n\r\n       \r\n        </Toolbar>\r\n           <TblContainer>\r\n           \r\n            <TblHead></TblHead>\r\n                <TableBody>\r\n                {\r\n                \r\n                getLSData.map( row => (\r\n                <TableRow key={row.LoadSheddingSNO}>\r\n                <TableCell >{row.LoadSheddingSNO}</TableCell>\r\n                <TableCell >{row.group}</TableCell>\r\n                <TableCell >{row.block}</TableCell>\r\n                <TableCell >{row.llFeders}</TableCell>\r\n                <TableCell >{row.mlFeeders}</TableCell>\r\n                <TableCell >{row.hlFeeders}</TableCell>\r\n                <TableCell >{row.vhlFeeders}</TableCell>\r\n                <TableCell >{row.totalFeeders}</TableCell>\r\n                <TableCell >{row.spell_1_to_and_From}</TableCell>\r\n                <TableCell >{row.spell_2_to_and_From}</TableCell>\r\n                <TableCell >{row.spell_3_to_and_From}</TableCell>\r\n                <TableCell >{row.spell_4_to_and_From}</TableCell>\r\n                <TableCell >{row.spell_5_to_and_From}</TableCell>\r\n                <TableCell >{row.spell_6_to_and_From}</TableCell>\r\n                <TableCell >{new Date(row.planExpiry).toDateString()}</TableCell>\r\n                <TableCell >{new Date(row.dataAddedDateTime).toDateString()}</TableCell>\r\n                <TableCell >{row.dataAddedBy}</TableCell>\r\n                <TableCell>\r\n                <Controls.ActionButton color=\"primary\"> \r\n                <EditOutlined fontSize= \"small\" onClick = { () => {openInPopup(row);console.log(row); }}></EditOutlined>\r\n                </Controls.ActionButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                <Controls.ActionButton color=\"secondary\"> \r\n                <CloseIcon fontSize= \"small\"></CloseIcon>\r\n                </Controls.ActionButton>\r\n                </TableCell>\r\n                        </TableRow>\r\n                    )\r\n\r\n                    )\r\n                }\r\n                </TableBody>\r\n            </TblContainer>\r\n            <TblPagination\r\n            ></TblPagination>\r\n            </Paper> \r\n        \r\n        <Popup\r\n        openPopup =  {openPopup}\r\n        setopenPopup = {setOpenPopup} \r\n        title = \"Shutdown Form\">\r\n       <TrafoShutdownForm></TrafoShutdownForm>\r\n        </Popup>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\TrafoShutdownForm.js",["267"],"import React, { useEffect } from 'react'\r\nimport { Controls } from '../../Components/Controls/Controls';\r\nimport UseForm, { Form } from \"../../Components/UseForm\";\r\nimport { Grid } from '@material-ui/core'\r\n\r\n\r\nconst initialFValues = {\r\n  TrafoShutdownSNO: 0,\r\n  grid : \"\",\r\n  trafo: \"\",\r\n  time : \"\",\r\n  date : \"\",\r\n  feederAffected : false,\r\n  reason : \"\",\r\n  rating : \"\",\r\n  load : \"\",\r\n  gsm : \"\",\r\n}\r\nexport default function TrafoShutdownForm(props) {\r\n    const {addOrEdit , recordForEdit} =props;\r\n    const { values, setValues,handleChange } = UseForm(initialFValues);\r\n    useEffect ( ()=> {\r\n\r\n        if(recordForEdit != null) {\r\n            setValues({...recordForEdit})\r\n        }\r\n    }, [recordForEdit])\r\n\r\n \r\n    \r\n\r\n    const handleSubmit = e => {\r\n       \r\n        e.preventDefault();\r\n        console.log(values);\r\n        addOrEdit(values);\r\n\r\n    }\r\n    return (\r\n        <Form onSubmit= {handleSubmit}>\r\n\r\n            <Grid>\r\n                <Grid container>\r\n                    <Grid item xs={6} >\r\n\r\n\r\n                    <Controls.Select\r\n                            name=\"Grid\"\r\n                            label=\"Select Grid\"\r\n                            value={values.grid}\r\n                            onChange={handleChange}\r\n                           \r\n                        />\r\n\r\n\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.time}\r\n                            name=\"time\"\r\n                            label=\"Time (24hrs format)\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Time\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            id=\"time\"\r\n                            onChange={handleChange}\r\n                            inputprops={{ tabIndex: \"3\" }}\r\n                        />\r\n\r\n                        <Controls.Select\r\n                        name=\"feederAffected\"\r\n                        label=\"Feeder Affected\"\r\n                        value={values.feederAffected}\r\n                        onChange={handleChange}\r\n                       \r\n                    />\r\n                    <Controls.Input\r\n                        variant=\"outlined\"\r\n                        value={values.rating}\r\n                        name=\"rating\"\r\n                        label=\"\"\r\n                        type=\"text\"\r\n                        size=\"medium\"\r\n                       disabled\r\n                        margin=\"normal\"\r\n                        required\r\n\r\n                        id=\"rating\"\r\n                        onChange={handleChange}\r\n                        inputprops={{ tabIndex: \"3\" }}\r\n                    />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} >\r\n                   \r\n                    <Controls.Select\r\n                    name=\"trafo\"\r\n                    label=\"Select Trafo\"\r\n                    value={values.trafo}\r\n                    onChange={handleChange}\r\n                    \r\n                />\r\n                <Controls.DatePicker\r\n                name=\"Date\"\r\n                label = \"Enter Shutdown Date\"\r\n                value= {values.date}\r\n           \r\n               onChange= {handleChange}\r\n                >\r\n             \r\n        \r\n                </Controls.DatePicker>\r\n                        <Controls.Input\r\n                            variant=\"outlined\"\r\n                            value={values.reason}\r\n                            name=\"reason\"\r\n                            label=\"Reason\"\r\n                            type=\"text\"\r\n                            size=\"medium\"\r\n                            placeholder=\"Enter Reason\"\r\n                            margin=\"normal\"\r\n                            required\r\n\r\n                            inputprops={{ tabIndex: \"6\" }}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Controls.Select\r\n                        name=\"load\"\r\n                        label=\"Select Load\"\r\n                        value={values.load}\r\n                        onChange={handleChange}\r\n                        \r\n                    /> <Controls.Select\r\n                    name=\"gsm\"\r\n                    label=\"Select GSM\"\r\n                    value={values.gsm}\r\n                    onChange={handleChange}\r\n                    \r\n                />\r\n                        <hr></hr>\r\n                        <div>\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"30\" }}\r\n                            >\r\n                                Submit\r\n\r\n              </Controls.Button>\r\n\r\n                            <Controls.Button\r\n\r\n                                type=\"submit\"\r\n\r\n                                variant=\"contained\"\r\n\r\n                                // className={classes.submit}\r\n                                disabled={false}\r\n                                inputprops={{ tabIndex: \"31\" }}\r\n                            >\r\n                                Reset\r\n\r\n            </Controls.Button>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\Notifications.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Controls\\ConfirmDialogue.js",[],"H:\\React-Projects\\ldc-shutdown\\src\\signing.js",["268","269"],"import React from 'react'\r\nimport {  Image, Form , Button, Alert} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default function Signing() {\r\n   \r\n   \r\n    return (\r\n        <div className=\"container-fluid bg\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">  </div>\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\r\n            \r\n            \r\n            <Form className=\"form-container\" >\r\n            <h1> LDC PORTAL LOGIN</h1>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter email\"  />\r\n    <Form.Text className=\"text-muted\" >\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicCheckbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n  <Button  type=\"submit\" className=\"btn btn-success btn-block\"  > \r\n    Submit\r\n  </Button>\r\n</Form>\r\n            \r\n            \r\n            \r\n            \r\n            </div>\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n        </div>\r\n       {/**  <Image src=\"https://assets.digitalocean.com/labs/images/community_bg.png\" />\r\n        <h1>Hello Wolrd</h1>*/}\r\n       \r\n\r\n        \r\n          \r\n        \r\n        \r\n     <div >\r\n   \r\n     </div>\r\n        </div>\r\n    )\r\n}\r\n","H:\\React-Projects\\ldc-shutdown\\src\\Components\\NavBar\\Header.js",["270","271"],"H:\\React-Projects\\ldc-shutdown\\src\\Components\\Pages\\Footer.js",[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":6,"column":8,"nodeType":"278","messageId":"279","endLine":6,"endColumn":18},{"ruleId":"276","severity":1,"message":"280","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":15},{"ruleId":"276","severity":1,"message":"281","line":3,"column":31,"nodeType":"278","messageId":"279","endLine":3,"endColumn":40},{"ruleId":"276","severity":1,"message":"282","line":3,"column":42,"nodeType":"278","messageId":"279","endLine":3,"endColumn":48},{"ruleId":"276","severity":1,"message":"283","line":3,"column":50,"nodeType":"278","messageId":"279","endLine":3,"endColumn":54},{"ruleId":"276","severity":1,"message":"284","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"282","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"281","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":17},{"ruleId":"276","severity":1,"message":"285","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":24},{"ruleId":"276","severity":1,"message":"286","line":50,"column":9,"nodeType":"278","messageId":"279","endLine":50,"endColumn":16},{"ruleId":"276","severity":1,"message":"287","line":73,"column":9,"nodeType":"278","messageId":"279","endLine":73,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":102,"column":9,"nodeType":"278","messageId":"279","endLine":102,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":130,"column":9,"nodeType":"278","messageId":"279","endLine":130,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":158,"column":9,"nodeType":"278","messageId":"279","endLine":158,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":187,"column":9,"nodeType":"278","messageId":"279","endLine":187,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":215,"column":9,"nodeType":"278","messageId":"279","endLine":215,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":243,"column":9,"nodeType":"278","messageId":"279","endLine":243,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":276,"column":9,"nodeType":"278","messageId":"279","endLine":276,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":309,"column":9,"nodeType":"278","messageId":"279","endLine":309,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":336,"column":9,"nodeType":"278","messageId":"279","endLine":336,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":362,"column":9,"nodeType":"278","messageId":"279","endLine":362,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":388,"column":9,"nodeType":"278","messageId":"279","endLine":388,"endColumn":14},{"ruleId":"276","severity":1,"message":"287","line":415,"column":9,"nodeType":"278","messageId":"279","endLine":415,"endColumn":14},{"ruleId":"276","severity":1,"message":"288","line":9,"column":27,"nodeType":"278","messageId":"279","endLine":9,"endColumn":33},{"ruleId":"276","severity":1,"message":"289","line":9,"column":35,"nodeType":"278","messageId":"279","endLine":9,"endColumn":40},{"ruleId":"276","severity":1,"message":"290","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":12},{"ruleId":"276","severity":1,"message":"291","line":20,"column":10,"nodeType":"278","messageId":"279","endLine":20,"endColumn":20},{"ruleId":"276","severity":1,"message":"292","line":56,"column":9,"nodeType":"278","messageId":"279","endLine":56,"endColumn":13},{"ruleId":"276","severity":1,"message":"293","line":4,"column":5,"nodeType":"278","messageId":"279","endLine":4,"endColumn":10},{"ruleId":"272","replacedBy":"294"},{"ruleId":"274","replacedBy":"295"},{"ruleId":"276","severity":1,"message":"296","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":14},{"ruleId":"276","severity":1,"message":"297","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":14},{"ruleId":"276","severity":1,"message":"298","line":8,"column":5,"nodeType":"278","messageId":"279","endLine":8,"endColumn":14},{"ruleId":"276","severity":1,"message":"299","line":9,"column":15,"nodeType":"278","messageId":"279","endLine":9,"endColumn":21},{"ruleId":"276","severity":1,"message":"300","line":1,"column":8,"nodeType":"278","messageId":"279","endLine":1,"endColumn":13},{"ruleId":"276","severity":1,"message":"301","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":25},{"ruleId":"302","severity":1,"message":"303","line":124,"column":7,"nodeType":"304","endLine":124,"endColumn":18,"suggestions":"305"},{"ruleId":"276","severity":1,"message":"292","line":128,"column":13,"nodeType":"278","messageId":"279","endLine":128,"endColumn":17},{"ruleId":"306","severity":1,"message":"307","line":244,"column":34,"nodeType":"308","messageId":"309","endLine":244,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":249,"column":33,"nodeType":"308","messageId":"309","endLine":249,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":270,"column":49,"nodeType":"308","messageId":"309","endLine":270,"endColumn":51},{"ruleId":"302","severity":1,"message":"310","line":32,"column":8,"nodeType":"304","endLine":32,"endColumn":23,"suggestions":"311"},{"ruleId":"276","severity":1,"message":"312","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"300","line":1,"column":8,"nodeType":"278","messageId":"279","endLine":1,"endColumn":13},{"ruleId":"276","severity":1,"message":"301","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":25},{"ruleId":"276","severity":1,"message":"313","line":7,"column":10,"nodeType":"278","messageId":"279","endLine":7,"endColumn":16},{"ruleId":"276","severity":1,"message":"314","line":73,"column":21,"nodeType":"278","messageId":"279","endLine":73,"endColumn":30},{"ruleId":"306","severity":1,"message":"307","line":168,"column":34,"nodeType":"308","messageId":"309","endLine":168,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":173,"column":33,"nodeType":"308","messageId":"309","endLine":173,"endColumn":35},{"ruleId":"276","severity":1,"message":"315","line":189,"column":48,"nodeType":"278","messageId":"279","endLine":189,"endColumn":75},{"ruleId":"306","severity":1,"message":"307","line":194,"column":49,"nodeType":"308","messageId":"309","endLine":194,"endColumn":51},{"ruleId":"302","severity":1,"message":"310","line":51,"column":8,"nodeType":"304","endLine":51,"endColumn":23,"suggestions":"316"},{"ruleId":"302","severity":1,"message":"317","line":70,"column":8,"nodeType":"304","endLine":70,"endColumn":10,"suggestions":"318"},{"ruleId":"302","severity":1,"message":"317","line":96,"column":8,"nodeType":"304","endLine":96,"endColumn":22,"suggestions":"319"},{"ruleId":"306","severity":1,"message":"307","line":104,"column":34,"nodeType":"308","messageId":"309","endLine":104,"endColumn":36},{"ruleId":"302","severity":1,"message":"317","line":121,"column":8,"nodeType":"304","endLine":121,"endColumn":18,"suggestions":"320"},{"ruleId":"302","severity":1,"message":"321","line":147,"column":8,"nodeType":"304","endLine":147,"endColumn":22,"suggestions":"322"},{"ruleId":"323","severity":1,"message":"324","line":158,"column":35,"nodeType":"325","messageId":"326","endLine":158,"endColumn":37},{"ruleId":"306","severity":1,"message":"307","line":160,"column":43,"nodeType":"308","messageId":"309","endLine":160,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":165,"column":43,"nodeType":"308","messageId":"309","endLine":165,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":169,"column":43,"nodeType":"308","messageId":"309","endLine":169,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":174,"column":43,"nodeType":"308","messageId":"309","endLine":174,"endColumn":45},{"ruleId":"302","severity":1,"message":"327","line":193,"column":8,"nodeType":"304","endLine":193,"endColumn":18,"suggestions":"328"},{"ruleId":"323","severity":1,"message":"324","line":204,"column":35,"nodeType":"325","messageId":"326","endLine":204,"endColumn":37},{"ruleId":"306","severity":1,"message":"307","line":206,"column":43,"nodeType":"308","messageId":"309","endLine":206,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":214,"column":43,"nodeType":"308","messageId":"309","endLine":214,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":221,"column":43,"nodeType":"308","messageId":"309","endLine":221,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":229,"column":43,"nodeType":"308","messageId":"309","endLine":229,"endColumn":45},{"ruleId":"302","severity":1,"message":"329","line":250,"column":8,"nodeType":"304","endLine":250,"endColumn":18,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":310,"column":29,"nodeType":"333","endLine":310,"endColumn":62},{"ruleId":"331","severity":1,"message":"332","line":327,"column":29,"nodeType":"333","endLine":327,"endColumn":62},{"ruleId":"331","severity":1,"message":"332","line":343,"column":29,"nodeType":"333","endLine":343,"endColumn":62},{"ruleId":"331","severity":1,"message":"332","line":401,"column":29,"nodeType":"333","endLine":401,"endColumn":62},{"ruleId":"331","severity":1,"message":"332","line":417,"column":29,"nodeType":"333","endLine":417,"endColumn":62},{"ruleId":"331","severity":1,"message":"332","line":433,"column":29,"nodeType":"333","endLine":433,"endColumn":62},{"ruleId":"306","severity":1,"message":"334","line":9,"column":20,"nodeType":"308","messageId":"309","endLine":9,"endColumn":22},{"ruleId":"306","severity":1,"message":"334","line":9,"column":63,"nodeType":"308","messageId":"309","endLine":9,"endColumn":65},{"ruleId":"276","severity":1,"message":"335","line":2,"column":69,"nodeType":"278","messageId":"279","endLine":2,"endColumn":83},{"ruleId":"276","severity":1,"message":"336","line":76,"column":26,"nodeType":"278","messageId":"279","endLine":76,"endColumn":35},{"ruleId":"302","severity":1,"message":"303","line":106,"column":11,"nodeType":"304","endLine":106,"endColumn":13,"suggestions":"337"},{"ruleId":"306","severity":1,"message":"307","line":121,"column":53,"nodeType":"308","messageId":"309","endLine":121,"endColumn":55},{"ruleId":"276","severity":1,"message":"335","line":2,"column":70,"nodeType":"278","messageId":"279","endLine":2,"endColumn":84},{"ruleId":"276","severity":1,"message":"336","line":61,"column":22,"nodeType":"278","messageId":"279","endLine":61,"endColumn":31},{"ruleId":"302","severity":1,"message":"338","line":91,"column":8,"nodeType":"304","endLine":91,"endColumn":10,"suggestions":"339"},{"ruleId":"306","severity":1,"message":"307","line":106,"column":50,"nodeType":"308","messageId":"309","endLine":106,"endColumn":52},{"ruleId":"276","severity":1,"message":"340","line":1,"column":26,"nodeType":"278","messageId":"279","endLine":1,"endColumn":35},{"ruleId":"276","severity":1,"message":"341","line":57,"column":23,"nodeType":"278","messageId":"279","endLine":57,"endColumn":32},{"ruleId":"276","severity":1,"message":"342","line":60,"column":12,"nodeType":"278","messageId":"279","endLine":60,"endColumn":25},{"ruleId":"276","severity":1,"message":"343","line":93,"column":13,"nodeType":"278","messageId":"279","endLine":93,"endColumn":25},{"ruleId":"276","severity":1,"message":"344","line":102,"column":13,"nodeType":"278","messageId":"279","endLine":102,"endColumn":22},{"ruleId":"306","severity":1,"message":"307","line":132,"column":34,"nodeType":"308","messageId":"309","endLine":132,"endColumn":36},{"ruleId":"306","severity":1,"message":"307","line":137,"column":33,"nodeType":"308","messageId":"309","endLine":137,"endColumn":35},{"ruleId":"276","severity":1,"message":"315","line":153,"column":48,"nodeType":"278","messageId":"279","endLine":153,"endColumn":75},{"ruleId":"306","severity":1,"message":"307","line":157,"column":49,"nodeType":"308","messageId":"309","endLine":157,"endColumn":51},{"ruleId":"302","severity":1,"message":"310","line":27,"column":8,"nodeType":"304","endLine":27,"endColumn":23,"suggestions":"345"},{"ruleId":"276","severity":1,"message":"346","line":2,"column":11,"nodeType":"278","messageId":"279","endLine":2,"endColumn":16},{"ruleId":"276","severity":1,"message":"347","line":2,"column":33,"nodeType":"278","messageId":"279","endLine":2,"endColumn":38},{"ruleId":"276","severity":1,"message":"348","line":2,"column":34,"nodeType":"278","messageId":"279","endLine":2,"endColumn":38},{"ruleId":"276","severity":1,"message":"282","line":2,"column":41,"nodeType":"278","messageId":"279","endLine":2,"endColumn":47},"no-native-reassign",["349"],"no-negated-in-lhs",["350"],"no-unused-vars","'Masterdata' is defined but never used.","Identifier","unusedVar","'Signing' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'classes' is assigned a value but never used.","'token' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","'createData' is defined but never used.","'name' is assigned a value but never used.","'Token' is assigned a value but never used.",["349"],["350"],"'NavBar' is defined but never used.","'Logout' is defined but never used.","'useEffect' is assigned a value but never used.","'logout' is assigned a value but never used.","'React' is defined but never used.","'PeopleOutlineIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMasterData'. Either include it or remove the dependency array.","ArrayExpression",["351"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["352"],"'TableBody' is defined but never used.","'Height' is defined but never used.","'setValues' is assigned a value but never used.","'recordAfterPagingAndSorting' is assigned a value but never used.",["353"],"React Hook useEffect has a missing dependency: 'values.block'. Either include it or remove the dependency array.",["354"],["355"],["356"],"React Hook useEffect has a missing dependency: 'values.group'. Either include it or remove the dependency array.",["357"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'category', 'setValues', and 'values'. Either include them or remove the dependency array.",["358"],"React Hook useEffect has missing dependencies: 'setValues' and 'values'. Either include them or remove the dependency array.",["359"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","'InputAdornment' is defined but never used.","'setFilter' is assigned a value but never used.",["360"],"React Hook useEffect has a missing dependency: 'getLSData'. Either include it or remove the dependency array.",["361"],"'useEffect' is defined but never used.","'setLSData' is assigned a value but never used.","'recordForEdit' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'addOredit' is assigned a value but never used.",["362"],"'Image' is defined but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"365","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"365","fix":"384"},"Update the dependencies array to be: [getMasterData, isUpdated]",{"range":"385","text":"386"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"387","text":"388"},{"range":"389","text":"388"},"Update the dependencies array to be: [values.block]",{"range":"390","text":"391"},"Update the dependencies array to be: [handleChange, values.block]",{"range":"392","text":"393"},"Update the dependencies array to be: [getBlock, values.block]",{"range":"394","text":"395"},"Update the dependencies array to be: [handleChange, values.group]",{"range":"396","text":"397"},"Update the dependencies array to be: [category, getGroup, setValues, values]",{"range":"398","text":"399"},"Update the dependencies array to be: [category, setValues, values]",{"range":"400","text":"401"},"Update the dependencies array to be: [getMasterData]",{"range":"402","text":"403"},"Update the dependencies array to be: [getLSData]",{"range":"404","text":"405"},{"range":"406","text":"388"},[4134,4145],"[getMasterData, isUpdated]",[987,1002],"[recordForEdit, setValues]",[1391,1406],[1782,1784],"[values.block]",[2373,2387],"[handleChange, values.block]",[2967,2977],"[getBlock, values.block]",[3562,3576],"[handleChange, values.group]",[5115,5125],"[category, getGroup, setValues, values]",[6898,6908],"[category, setValues, values]",[3730,3732],"[getMasterData]",[2872,2874],"[getLSData]",[702,717]]